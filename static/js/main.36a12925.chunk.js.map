{"version":3,"sources":["Menu.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","state","headerTitle","title","className","list","selectedItem","name","e","setState","target","value","switchGameMode","_this2","_this$state","classes","react_default","a","createElement","Select_default","onChange","map","item","MenuItem_default","key","id","Component","withStyles","root","background","statesNames","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","cityNames","markerOffset","coordinates","AlbersUSA","handleStateClick","renderMarker","renderMarkerText","highScore","currentScore","gameMode","randomState","Math","floor","random","keys","length","previousRandomState","randomCity","previousRandomCity","marker","textAnchor","y","style","fontFamily","fill","lib","i","default","position","outline","hover","pressed","onClick","concat","cx","cy","r","opacity","event","entity","randomEntity","previousEntity","previousCorrectEntity","correctEntity","document","getElementById","classList","add","remove","_this3","showMarkers","src_Menu","projection","projectionConfig","scale","xOffset","yOffset","width","height","disablePanning","geography","disableOptimization","geographies","properties","ID_1","cacheId","round","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36a12925.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  root: { background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\" }\r\n};\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      headerTitle: this.props.title,\r\n      className: this.props.className,\r\n      list: this.props.list,\r\n      selectedItem: this.props.list[0].name\r\n    };\r\n  }\r\n\r\n\r\n  handleChange(e) {\r\n    this.setState({ selectedItem: e.target.value });\r\n    this.props.switchGameMode(e.target.value);\r\n  }\r\n  render() {\r\n    const { headerTitle, className, list, selectedItem } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        {\r\n          <div>\r\n            <Select className={this.state.className}\r\n              onChange={e => this.handleChange(e)}\r\n              value={selectedItem}\r\n            >\r\n              {list.map(item => (\r\n                <MenuItem value={item.name} key={item.id}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n\r\n            </Select>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Menu from \"./Menu.js\";\r\nimport {\r\n  ComposableMap,\r\n  ZoomableGroup,\r\n  Geographies,\r\n  Geography,\r\n  Markers,\r\n  Marker\r\n} from \"react-simple-maps\";\r\n\r\nconst statesNames = {\r\n  0: \"Alabama\", 1: \"Alaska\", 2: \"Arizona\", 3: \"Arkansas\", 4: \"California\",\r\n  5: \"Colorado\", 6: \"Connecticut\", 7: \"Delaware\", 8: \"Florida\",\r\n  9: \"Georgia\", 10: \"Hawaii\", 11: \"Idaho\", 12: \"Illinois\", 13: \"Indiana\",\r\n  14: \"Iowa\", 15: \"Kansas\", 16: \"Kentucky\", 17: \"Louisiana\", 18: \"Maine\",\r\n  19: \"Maryland\", 20: \"Massachusetts\", 21: \"Michigan\", 22: \"Minnesota\",\r\n  23: \"Mississippi\", 24: \"Missouri\", 25: \"Montana\", 26: \"Nebraska\",\r\n  27: \"Nevada\", 28: \"New Hampshire\", 29: \"New Jersey\", 30: \"New Mexico\",\r\n  31: \"New York\", 32: \"North Carolina\", 33: \"North Dakota\", 34: \"Ohio\",\r\n  35: \"Oklahoma\", 36: \"Oregon\", 37: \"Pennsylvania\", 38: \"Rhode Island\",\r\n  39: \"South Carolina\", 40: \"South Dakota\", 41: \"Tennessee\", 42: \"Texas\",\r\n  43: \"Utah\", 44: \"Vermont\", 45: \"Virginia\", 46: \"Washington\",\r\n  47: \"West Virginia\", 48: \"Wisconsin\", 49: \"Wyoming\"\r\n};\r\n\r\n//const cityNames = {\r\n//          0: {markerOffset: markerOffset, name: \"New York\", coordinates: [-74.0059413, 40.7127837] },\r\n//          1: {markerOffset: markerOffset, name: \"Philadelphia\", coordinates: [-75.1652215, 39.9525839]},\r\n//          2: {markerOffset: markerOffset, name: \"Los Angeles\", coordinates: [-118.2436849, 34.0522342] },\r\n//          3: {markerOffset: markerOffset, name: \"Chicago\", coordinates: [-87.6297982, 41.8781136]},\r\n//          4: {markerOffset: markerOffset, name: \"Houston\", coordinates: [-95.3698028, 29.7604267] },\r\n//          5: {markerOffset: markerOffset, name: \"Phoenix\", coordinates: [-112.0740373, 33.4483771]},\r\n//          6: {markerOffset: markerOffset, name: \"San Antonio\", coordinates: [-98.4936282, 29.4241219] },\r\n//          7: {markerOffset: markerOffset, name: \"San Diego\", coordinates: [-117.1610838, 32.715738]},\r\n//          8: {markerOffset: markerOffset, name: \"Dallas\", coordinates: [-96.7969879, 32.7766642] },\r\n//          9: {markerOffset: markerOffset, name: \"San Jose\", coordinates: [-121.8863286, 37.3382082]},\r\n//          10: {markerOffset: markerOffset, name: \"Austin\", coordinates: [-97.7430608, 30.267153] },\r\n//          11: {markerOffset: markerOffset, name: \"Indianapolis\", coordinates: [-86.158068, 39.768403]},\r\n//          12: {markerOffset: markerOffset, name: \"Jacksonville\", coordinates: [-81.655651, 30.3321838] },\r\n//          13: {markerOffset: markerOffset, name: \"San Francisco\", coordinates: [-122.4194155, 37.7749295]}\r\n//         }\r\nconst markerOffset = -10;\r\nconst cityNames = {\r\n  0: {\r\n    markerOffset: markerOffset,\r\n    name: \"New York\",\r\n    coordinates: [-74.0059413, 40.7127837]\r\n  },\r\n  1: {\r\n    markerOffset: markerOffset,\r\n    name: \"Philadelphia\",\r\n    coordinates: [-75.1652215, 39.9525839]\r\n  },\r\n  2: {\r\n    markerOffset: markerOffset,\r\n    name: \"Los Angeles\",\r\n    coordinates: [-118.2436849, 34.0522342]\r\n  },\r\n  3: {\r\n    markerOffset: markerOffset,\r\n    name: \"Chicago\",\r\n    coordinates: [-87.6297982, 41.8781136]\r\n  },\r\n  4: {\r\n    markerOffset: markerOffset,\r\n    name: \"Austin\",\r\n    coordinates: [-97.7430608, 30.267153]\r\n  },\r\n  5: {\r\n    markerOffset: markerOffset,\r\n    name: \"Phoenix\",\r\n    coordinates: [-112.0740373, 33.4483771]\r\n  },\r\n\r\n  6: {\r\n    markerOffset: markerOffset,\r\n    name: \"Houston\",\r\n    coordinates: [-95.3698028, 29.7604267]\r\n  },\r\n  7: {\r\n    markerOffset: markerOffset,\r\n    name: \"San Diego\",\r\n    coordinates: [-117.1610838, 32.715738]\r\n  },\r\n  8: {\r\n    markerOffset: markerOffset,\r\n    name: \"Dallas\",\r\n    coordinates: [-96.7969879, 32.7766642]\r\n  },\r\n  9: {\r\n    markerOffset: markerOffset,\r\n    name: \"San Francisco\",\r\n    coordinates: [-122.4194155, 37.7749295]\r\n  },\r\n\r\n  10: {\r\n    markerOffset: markerOffset,\r\n    name: \"San Antonio\",\r\n    coordinates: [-98.4936282, 29.4241219]\r\n  },\r\n  11: {\r\n    markerOffset: markerOffset,\r\n    name: \"Indianapolis\",\r\n    coordinates: [-86.158068, 39.768403]\r\n  },\r\n  12: {\r\n    markerOffset: markerOffset,\r\n    name: \"Jacksonville\",\r\n    coordinates: [-81.655651, 30.3321838]\r\n  },\r\n  13: {\r\n    markerOffset: markerOffset,\r\n    name: \"San Jose\",\r\n    coordinates: [-121.8863286, 37.3382082]\r\n  }\r\n};\r\n\r\nclass AlbersUSA extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleStateClick = this.handleStateClick.bind(this);\r\n    this.renderMarker = this.renderMarker.bind(this);\r\n    this.renderMarkerText = this.renderMarkerText.bind(this);\r\n    this.switchGameMode = this.switchGameMode.bind(this);\r\n    this.state = {\r\n      highScore: 0,\r\n      currentScore: 0,\r\n      gameMode: \"States\",\r\n      randomState: Math.floor(Math.random() * (Object.keys(statesNames).length)),\r\n      previousRandomState: -1,\r\n      randomCity: Math.floor(Math.random() * (Object.keys(cityNames).length )),\r\n      previousRandomCity: -1\r\n    };\r\n  }\r\n  renderMarkerText(marker) {\r\n    if (marker == this.state.previousRandomCity) {\r\n      return (\r\n        <text\r\n          textAnchor=\"middle\"\r\n          y={cityNames[marker][\"markerOffset\"]}\r\n          style={{\r\n            fontFamily: \"Roboto, sans-serif\",\r\n            fill: \"#008000\"\r\n\r\n          }}\r\n        >\r\n          {cityNames[marker][\"name\"]}\r\n        </text>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderMarker() {\r\n    if (cityNames.length != 0 || cityNames != null) {\r\n      return (\r\n        <Markers>\r\n          {Object.keys(cityNames).map((marker, i) => (\r\n            <Marker\r\n              key={i}\r\n              marker={cityNames[i]}\r\n              style={{\r\n                default: { fill: \"#FF5722\", position: \"fixed\", outline: \"none\" },\r\n                hover: { fill: \"#FFFFFF\", outline: \"none\" },\r\n                pressed: { fill: \"#FF5722\", outline: \"none\" }\r\n              }}\r\n              onClick={e => this.handleStateClick(e, marker)}\r\n            >\r\n              <circle\r\n                id={`city-${i}`}\r\n                cx={0}\r\n                cy={0}\r\n                r={5}\r\n                style={{\r\n                  opacity: 1\r\n                }}\r\n              />\r\n              {this.renderMarkerText(marker)}\r\n            </Marker>\r\n          ))}\r\n        </Markers>\r\n      );\r\n    }\r\n  }\r\n\r\n  handleStateClick(event, entity) {\r\n    const gameMode = this.state.gameMode;\r\n    var randomEntity;\r\n    var previousEntity;\r\n\r\n    if (gameMode == \"Cities\") {\r\n      randomEntity = this.state.randomCity;\r\n      previousEntity = this.state.previousRandomCity;\r\n    } else if (gameMode == \"States\") {\r\n      randomEntity = this.state.randomState;\r\n      previousEntity = this.state.previousRandomState;\r\n    }\r\n    let currentScore = this.state.currentScore;\r\n    if (randomEntity == entity) {\r\n      currentScore = currentScore + 1;\r\n      this.setState({ currentScore: currentScore });\r\n      if (currentScore > this.state.highScore) {\r\n        this.setState({ highScore: currentScore });\r\n      }\r\n    } else {\r\n      if (currentScore > this.state.highScore) {\r\n        this.setState({ highScore: currentScore, currentScore: 0 });\r\n      } else {\r\n        this.setState({ currentScore: 0 });\r\n      }\r\n    }\r\n    var previousCorrectEntity;\r\n    var correctEntity;\r\n\r\n    //Select random state\r\n    if (gameMode == \"Cities\") {\r\n      this.setState({\r\n        randomCity: Math.floor(Math.random() * (12 + 1)),\r\n        previousRandomCity: this.state.randomCity\r\n      });\r\n      previousCorrectEntity = document.getElementById(`city-${previousEntity}`);\r\n      correctEntity = document.getElementById(`city-${randomEntity}`);\r\n    } else if (gameMode == \"States\") {\r\n      previousCorrectEntity = document.getElementById(\r\n        `state-${previousEntity}`\r\n      );\r\n      this.setState({\r\n        randomState: Math.floor(Math.random() * (49 + 1)),\r\n        previousRandomState: this.state.randomState\r\n      });\r\n      previousCorrectEntity = document.getElementById(\r\n        `state-${previousEntity}`\r\n      );\r\n      correctEntity = document.getElementById(`state-${randomEntity}`);\r\n    }\r\n\r\n    correctEntity.classList.add(\"correct\");\r\n\r\n    if (previousCorrectEntity != null) {\r\n      previousCorrectEntity.classList.remove(\"correct\");\r\n    }\r\n  }\r\n\r\n  handleCityClick() {}\r\n\r\n  switchGameMode(gameMode) {\r\n    //remove correct class from previous entity when the game mode is changed\r\n    var previousCorrectEntity;\r\n    if (this.state.gameMode == \"Cities\") {\r\n      var previousEntity = this.state.previousRandomCity;\r\n      previousCorrectEntity = document.getElementById(`city-${previousEntity}`);\r\n    } else if (this.state.gameMode == \"States\") {\r\n      var previousEntity = this.state.previousRandomState;\r\n      previousCorrectEntity = document.getElementById(\r\n        `state-${previousEntity}`\r\n      );\r\n    }\r\n    if (previousCorrectEntity != null) {\r\n      previousCorrectEntity.classList.remove(\"correct\");\r\n    }\r\n    this.setState({ gameMode: gameMode, highScore: 0, currentScore: 0 });\r\n  }\r\n\r\n  render() {\r\n    const games = [{ id: 0, name: \"States\" }, { id: 1, name: \"Cities\" }];\r\n    const gameMode = this.state.gameMode;\r\n    var showMarkers = false;\r\n    var randomEntity = \"States\";\r\n\r\n    if (gameMode == \"Cities\") {\r\n      randomEntity = cityNames[this.state.randomCity][\"name\"];\r\n      showMarkers = true;\r\n    } else if (gameMode == \"States\") {\r\n      randomEntity = statesNames[this.state.randomState];\r\n    }\r\n\r\n\r\n    return (\r\n      <div >\r\n\t      <div >\r\n\t        <Menu\r\n\t\t\t  className=\"menu\"\r\n\t          title=\"Guess The State!\"\r\n\t          list={games}\r\n\t          switchGameMode={this.switchGameMode}\r\n\t        />\r\n\t        </div>\r\n\r\n        <div className=\"random-state-name\">Find - {randomEntity}</div>\r\n        <ComposableMap\r\n          projection=\"albersUsa\"\r\n          projectionConfig={{\r\n            scale: 1000,\r\n            xOffset: 0,\r\n            yOffset: 0\r\n          }}\r\n          width={980}\r\n          height={551}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"auto\"\r\n          }}\r\n        >\r\n          <ZoomableGroup disablePanning>\r\n            {/*<Geographies geography=\"/US-State-Game/us.json\" disableOptimization>*/}\r\n            <Geographies geography=\"/US-State-Game/us.json\" disableOptimization>\r\n              {(geographies, projection) =>\r\n                geographies.map((geography, i) => {\r\n                  return (\r\n                    <Geography\r\n                      id={`state-${geography.properties.ID_1 - 1}`}\r\n                      key={`state-${geography.properties.ID_1 - 1}`}\r\n                      cacheId={`state-${geography.properties.ID_1 - 1}`}\r\n                      round\r\n                      geography={geography}\r\n                      projection={projection}\r\n                      onClick={e =>\r\n                        this.handleStateClick(e, geography.properties.ID_1 - 1)\r\n                      }\r\n                    />\r\n                  );\r\n                })\r\n              }\r\n            </Geographies>\r\n\r\n            {showMarkers && this.renderMarker()}\r\n          </ZoomableGroup>\r\n        </ComposableMap>\r\n        <div className=\"scores-container\">\r\n          <div className=\"high-Score\">High Score - {this.state.highScore}</div>\r\n          <div className=\"current-Score\">\r\n            Current Score - {this.state.currentScore}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlbersUSA;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}